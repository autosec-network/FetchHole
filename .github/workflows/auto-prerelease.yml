name: Publish Prerelease

on:
  push:
    branches-ignore:
      - latest
    paths:
      - '.github/workflows/compile.yml'
      - 'src/**'
      - 'package*.json'
      - 'tsconfig.json'
  workflow_dispatch:
    inputs:
      semver:
        required: true
        default: 'prerelease'
        type: choice
        options:
          - premajor
          - preminor
          - prepatch
          - prerelease

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - run: npm ci
      - uses: actions/cache/restore@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            .tsbuildinfo
            dist
          # npm packages + tsconfig + value of `include` in tsconfig
          key: typescript-cache-tsc-${{ hashFiles('**/*.tsbuildinfo') }}
          restore-keys: |
            typescript-cache-tsc-
          enableCrossOsArchive: true
      - run: npm run build
      - uses: actions/cache/save@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            .tsbuildinfo
            dist
          # npm packages + tsconfig + value of `include` in tsconfig
          key: typescript-cache-tsc-${{ hashFiles('**/*.tsbuildinfo') }}
          enableCrossOsArchive: true
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: dist
          path: ${{ github.workspace }}/dist
          if-no-files-found: error
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - run: npm ci
      # TODO: actually test
  tag:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      npm-version-new-tag: ${{ steps.npm-version.outputs.NEW_TAG }}
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # Important to fetch all history for versioning
      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - name: Git Setup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - run: echo "NEW_TAG=$(npm version ${{ inputs.semver || 'prerelease' }} --preid=${{ github.ref_name }})" >> $GITHUB_OUTPUT
        id: npm-version
      - run: git push --follow-tags
  release:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      # - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      - run: zip -r ${{ github.workspace }}/dist.zip ${{ github.workspace }}/dist
      - uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          prerelease: true
          files: |
            ${{ github.workspace }}/dist.zip
          tag_name: ${{ needs.tag.outputs.npm-version-new-tag }}
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
