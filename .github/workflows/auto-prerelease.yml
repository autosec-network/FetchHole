name: Publish Prerelease

on:
  push:
    branches-ignore:
      - latest
    paths:
      - '.github/workflows/auto-prerelease.yml'
      - 'src/**'
      - 'test/**'
      - 'package*.json'
      - 'tsconfig.json'
  workflow_dispatch:
    inputs:
      semver:
        required: true
        default: 'prerelease'
        type: choice
        options:
          - premajor
          - preminor
          - prepatch
          - prerelease

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      pr: ${{ steps.check_pr.outputs.PR_NUMBER }}
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Check if commit is part of a PR
        id: check_pr
        run: |
          PR_NUMBER=$(gh pr list --head ${{ github.ref_name }} --json number --jq '.[0].number // empty' --repo ${{ github.repository }})

          if [[ -z "$PR_NUMBER" ]]; then
            echo "This commit is a direct push to a branch."
            echo "PR_NUMBER=none" >> $GITHUB_OUTPUT
          else
            echo "This commit is part of PR #$PR_NUMBER."
            echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - run: npm ci
      - uses: actions/cache/restore@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            .tsbuildinfo
            dist
          # npm packages + tsconfig + value of `include` in tsconfig
          key: typescript-cache-tsc-${{ hashFiles('**/*.tsbuildinfo') }}
          restore-keys: |
            typescript-cache-tsc-
          enableCrossOsArchive: true
      - run: npm run build
      - uses: actions/cache/save@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            .tsbuildinfo
            dist
          # npm packages + tsconfig + value of `include` in tsconfig
          key: typescript-cache-tsc-${{ hashFiles('**/*.tsbuildinfo') }}
          enableCrossOsArchive: true
      - uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
        with:
          name: dist
          path: ${{ github.workspace }}/dist
          if-no-files-found: error
          compression-level: 9
  prepare-tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.TEST_FILES }}
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: echo "TEST_FILES=$(find test -type f -iname "*.test.*ts" -exec realpath --relative-to=test '{}' \; | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        id: set-matrix
  test:
    needs: [build, prepare-tests]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      actions: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.prepare-tests.outputs.matrix) }}
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        version: [lts/*, latest]
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        if: matrix.os == 'ubuntu-latest'
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4.1.0
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ matrix.version }}
          check-latest: true
          cache: npm
      - run: npm ci
      - run: npm test -- --test-reporter-destination=stdout --test-reporter=junit --test-reporter-destination=test-output.xml test/${{ matrix.test }}
      # - uses: dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4 # v1.7.0
      #   if: always()
      #   with:
      #     name: '${{ github.job }} (${{ matrix.os }}, ${{ matrix.version }})'
      #     path: test-output.xml
      #     reporter: 'jest-junit'
      #     max-annotations: 50
      - uses: test-summary/action@fee35d7df20790255fe6aa92cf0f6d28092ecf2f # v2.2
        if: always()
        with:
          paths: |
            test-output.xml
          show: all
  tag:
    needs: [detect, test]
    if: needs.detect.outputs.pr == 'none'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      npm-version-new-tag: ${{ steps.npm-version.outputs.NEW_TAG }}
      commit_sha: ${{ steps.tag_sha.outputs.commit_sha }}
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # Important to fetch all history for versioning
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - name: Git Setup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - run: echo "NEW_TAG=$(npm version ${{ inputs.semver || 'prerelease' }} --preid=${{ github.ref_name }})" >> $GITHUB_OUTPUT
        id: npm-version
      - run: git push --follow-tags
      - run: echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        id: tag_sha
  release:
    needs: [detect, tag]
    if: needs.detect.outputs.pr == 'none'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          prerelease: true
          tag_name: ${{ needs.tag.outputs.npm-version-new-tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    needs: [detect, tag, release]
    if: needs.detect.outputs.pr == 'none'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ needs.tag.outputs.commit_sha }}
      - uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4.1.0
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish --tag ${{ github.ref_name }} --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
